import static junit.framework.Assert.assertEquals;
import static org.junit.Assert.*;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.List;

import org.junit.BeforeClass;
import org.junit.Test;

import com.ideas.model.Item;

public class ItemRepositorySpecs {

	private static final int NO_ITEMS = 0;
	private final  ItemRepository repository = new ItemRepository(conn);
	private static Connection conn;
	
	@BeforeClass
	public static void createConnection() throws ClassNotFoundException, SQLException {
			Class.forName("org.hsqldb.jdbcDriver");
			conn= DriverManager.getConnection("jdbc:hsqldb:mem:inventoryDb",
					"SA", "");
			createItemTable(conn);
	}

	@Test
	public void emptyRepositoryReturnsNothing() {
		// Given a repository

		// When
		List<Item> items = repository.findAll();

		// Then
		assertEquals(NO_ITEMS, items.size());
	}

	@Test
	public void repositoryContainingOneItemReturnsOne() throws Exception {
		// Given an item in repository
		Item pen = new Item("pen", 1);
		repositoryHas(pen);

		// When
		List<Item> items = repository.findAll();

		// Then
		assertEquals(1, items.size());
		assertEquals(pen, items.get(0));

	}
	
	

	private void repositoryHas(Item item) throws ClassNotFoundException, SQLException {
		insertItem(item, conn);
	}

	private void insertItem(Item item, Connection conn) throws SQLException {
		String insertItemTableQuery = String.format(
				"insert into item values (IDENTITY(), \'%s\', %d)",
				item.getName(),item.getQuantity());
		
			conn.createStatement().executeUpdate(insertItemTableQuery);
	}

	private static void createItemTable(Connection conn) throws SQLException {
		StringBuilder createItemTableQuery = new StringBuilder();
		createItemTableQuery.append("create table item ")
				.append(" (id int generated by default as identity primary key, ")
				.append("name varchar(50) not Null, ")
				.append("quantity int not Null)");
		
			conn.createStatement().execute(createItemTableQuery.toString());
	}

	

}
